#!/bin/bash
[ -z "$1" ] && ( echo "No url provided"; exit 1)

[ -z "$LOG_DIR" ] && LOG_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/dotfiles"
[ -z "$LOG_FILE" ] && LOG_FILE="$LOG_DIR/tsp_ytdlp.log"
[ -z "$VIDEO_DIR" ] && VIDEO_DIR="$HOME/Videos/youtube"

RETRY_DELAY=30
VIDEO_PATH_TEMPLATE="$VIDEO_DIR/%(title)s-%(id)s.%(ext)s"

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$LOG_FILE"
}

mkdir -p "$LOG_DIR"
url="$1"
if ! full_path=$(yt-dlp --print filename --restrict-filename "$url" -o "$VIDEO_PATH_TEMPLATE"); then
    log "Failed to get filename for $url"
    exit 1
fi
base_path=${full_path%.*}
filename=$(basename "$base_path")
log "Downloading $url to $base_path.*"
once=""
while true; do
    yt-dlp --embed-metadata --xattrs --sponsorblock-remove sponsor --sponsorblock-mark intro,outro,selfpromo,preview --restrict-filename -o "${base_path}.%(ext)s" "$url" 2>&1 | while read -r line; do
        if echo "$line" | grep -q "\[download\] Destination:"; then
            actual_file=${line#\[download\] Destination: }
            filename=$(basename "$actual_file")
            [ -z "$once" ] && (once="done"; log "Destination for $url: $actual_file" )
        fi
    done
    
    if [ "${PIPESTATUS[0]}" -eq 0 ]; then
        actual_file=$(find "$(dirname "$base_path")" -type f -name "$(basename "$base_path").*" | head -1)
        if [ -n "$actual_file" ]; then
            filename=$(basename "$actual_file")
        fi
        break
    else
        log "Download failed for $url ($filename)- retrying in ${RETRY_DELAY}s"
        sleep $RETRY_DELAY
    fi
done

[ -e "$VIDEO_DIR/$filename" ] && touch "$VIDEO_DIR/$filename"
log "Download completed successfully: $url -> $VIDEO_DIR/$filename"
notify-send -t 5000 "Download completed: $filename ðŸ¤—"
