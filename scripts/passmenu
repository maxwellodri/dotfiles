#!/usr/bin/env bash
shopt -s nullglob globstar

typeit=0
if [[ $1 == "--type" ]]; then
	typeit=1
	shift
fi

if [[ -n $WAYLAND_DISPLAY ]]; then
	dmenu=dmenu-wl
	xdotool="ydotool type --file -"
	display="WL"
elif [[ -n $DISPLAY ]]; then
	dmenu=dmenu
	xdotool="xdotool type --clearmodifiers --file -"
	display="X11"
else
	echo "Error: No Wayland or X11 display detected" >&2
	exit 1
fi

prefix=${PASSWORD_STORE_DIR-~/.password-store}
password_files=( "$prefix"/**/*.gpg )
password_files=( "${password_files[@]#"$prefix"/}" )
password_files=( "${password_files[@]%.gpg}" )
filter=" #otp/"

password=$(printf '%s\n' "${password_files[@]}" | grep -v "$filter" | "$dmenu" -l 30 -c --class "passmenu" -p Password "$@")

[[ -n $password ]] || exit

show_subcommand="show"

if [[ "$password" == *"otp/"* ]]; then
    show_subcommand="otp"
fi

if [[ $typeit -eq 0 ]]; then
    if [[ "$display" == "X11" ]]; then
        password_text=$(pass $show_subcommand "$password" | head -n1)
        echo -n "$password_text" | xclip -selection clipboard 2>/dev/null
        
        password_hash=$(echo -n "$password_text" | sha256sum | cut -d' ' -f1) #keep in sync with _pass_clear_clip hashing
        nohup "$bin/_pass_clear_clip" "$password_hash" >/dev/null 2>&1 &
    else
        # For Wayland, use the built-in -c option
        pass $show_subcommand -c "$password" 2>/dev/null
    fi
else
    pass $show_subcommand "$password" | { IFS= read -r pass; printf %s "$pass"; } | $xdotool
fi
