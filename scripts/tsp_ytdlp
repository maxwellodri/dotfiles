#!/bin/bash
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$LOG_FILE"
}



VIDEO_DIR="$HOME/Videos/youtube"
LOG_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/dotfiles"
LOG_FILE="$LOG_DIR/tsp_ytdlp.log"

mkdir -p "$VIDEO_DIR"
mkdir -p "$LOG_DIR"
url="$1"


if [ -z "$url" ]; then
    notify-send "Error: No URL provided"
    exit 1
fi

if [[ ! "$url" =~ ^https?:// ]]; then
    notify-send "Error: Not a URL - $url"
    exit 1
fi

is_url_already_queued() {
    local url="$1"
    tsp -l | grep -q "yt-dlp: $url"
    return $?
}

if is_url_already_queued "$url"; then
    notify-send "URL already queued: $url"
    log "Skipped adding duplicate URL to queue: $url"
    exit 0
fi

tsp -L "yt-dlp: $url " env TSP_YTDLP=1 LOG_DIR="$LOG_DIR" LOG_FILE="$LOG_FILE" VIDEO_DIR="$VIDEO_DIR" "$bin/_tsp_download_video_helper" "$url"
tsp_exit_code="$?"
if [ $tsp_exit_code -ne 0 ]; then
    log "ERROR: Failed to queue download. TSP exit code: $tsp_exit_code"
    notify-send "Error: Failed to queue download"
    exit "$tsp_exit_code"
else
    log "Successfully queued tsp command for: $url, TSP exit code: $tsp_exit_code"
    notify-send "Download queued: $url"
fi
