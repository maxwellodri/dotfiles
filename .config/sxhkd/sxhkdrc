#           _     _       _          
#  _____  _| |__ | | ____| |_ __ ___ 
# / __\ \/ / '_ \| |/ / _` | '__/ __|
# \__ \>  <| | | |   < (_| | | | (__ 
# |___/_/\_\_| |_|_|\_\__,_|_|  \___|
#                                    
super + shift + x
	xdo kill
#  ____                                          
# |  _ \ _ __ ___   __ _ _ __ __ _ _ __ ___  ___ 
# | |_) | '__/ _ \ / _` | '__/ _` | '_ ` _ \/ __|
# |  __/| | | (_) | (_| | | | (_| | | | | | \__ \
# |_|   |_|  \___/ \__, |_|  \__,_|_| |_| |_|___/
#                  |___/                         
super + Return
	st 
super + Home
	todo
super + shift + d
	togglerc ~/todo/todo.txt
super + ctrl + c
    xdotool windowclose $(click_window)
super + d
	dmenu_run 
super + e
	emojis
super + shift + Tab
	lockme
super + shift + a
	art.sh
super + Insert
	bash -e passmenu
super + shift + b
	bookmarks
super + shift + q
	set_kb_map && notify-send -t 1000 "Correctly Set Capslock => Escape üòç"
super + shift + w
	togglerc ~/vimwiki/index.wiki
super + w
    wallpaper-shader
super + shift + t
	torr
super + ctrl + shift + s
    wholescreensave && sleep 0.2 && notify-send -t 1000 "Screenshot Taken"
super + shift + o
    xdotool mousemove 2200 1000 && sleep 0.1 && xdotool mousemove 2250 1050 && sleep 0.1 && xdotool mousemove 2300 && 1000


#  _                    _      
# | |_ ___   __ _  __ _| | ___ 
# | __/ _ \ / _` |/ _` | |/ _ \
# | || (_) | (_| | (_| | |  __/
#  \__\___/ \__, |\__, |_|\___|
#           |___/ |___/        
#Programs:
#super + shift + c
	#cd ~/source/dwm && sudo make clean install && pkill dwm && notify-send "üòà recompiled dwm üòà "
	#[ "$(basename "$WM")"=="dwm" ] && pkill dwm
#super + shift + g 
#	gpumine
super + shift + m
    ~/bin/monitor.sh && feh --bg-scale "$dotfiles/images/low_poly_red.jpg"
#	pgrep ncmpcpp && pkill ncmpcpp || st -e ncmpcpp #toggle ncmpcpp
super + shift + n
	pgrep newsboat && pkill newsboat || st -e newsboat #toggle newsboat
	#pgrep newsboat && notify-send "ü§†a Newsboat is reloading ü§†" || st -e newsboat #toggle newsboat
super + ctrl + n
	pkill newsboat; notify-send -t 750 "ü•∫ Starting to reload Newsboat ü•∫" && newsboat -x reload && notify-send -t 750 "ü•∫ Newsboat has finished reloading ü•∫"
super + c
	pgrep calcurse && pkill calcurse || st -e calcurse #toggle ncmpcpp
super + Escape
	pkill -USR1 -x sxhkd && notify-send "ü§î sxhkd reloaded ü§î"
#super + shift + t
#	pgrep transmission-da && pkill transmission-da && notify-send "Killing transmission" || notify-send "Starting transmission" && transmission-daemon 
#Config Files:
super + shift + v
	togglerc ~/.config/nvim/init.vim
super + shift + Escape
	togglerc ~/.config/sxhkd/sxhkdrc

super + q
    [ timew ] && timew stop | timew start 
#st -e vim ~/.config/sxhkd/sxhkdrc
#Media:
XF86AudioPlay
	mpc toggle
XF86AudioNext
	mpc next
XF86AudioPrev
	mpc prev
XF86Tools
	notify-send -t 2000 "Now Playing" "$(mpc --format '%title% \n%artist% - %album%' current)"
XF86AudioRaiseVolume
	pactl set-sink-volume @DEFAULT_SINK@ +5%
XF86AudioLowerVolume
	pactl set-sink-volume @DEFAULT_SINK@ -5%

#
# bspwm hotkeys
#

## quit/restart bspwm
#super + alt + {q,r}
#	bspc {quit,wm -r}
#
## close and kill
#super + {_,shift + }w
#	bspc node -{c,k}
#
## alternate between the tiled and monocle layout
#super + m
#	bspc desktop -l next
#
## send the newest marked node to the newest preselected node
#super + y
#	bspc node newest.marked.local -n newest.!automatic.local
#
## swap the current node and the biggest window
#super + g
#	bspc node -s biggest.window
#
##
## state/flags
##
#
## set the window state
#super + {t,shift + t,s,f}
#	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}
#
## set the node flags
#super + ctrl + {m,x,y,z}
#	bspc node -g {marked,locked,sticky,private}
#
##
## focus/swap
##
#
## focus the node in the given direction
#super + {_,shift + }{h,j,k,l}
#	bspc node -{f,s} {west,south,north,east}
#
## focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}
#
## focus the next/previous window in the current desktop
#super + {_,shift + }c
#	bspc node -f {next,prev}.local.!hidden.window
#
## focus the next/previous desktop in the current monitor
#super + bracket{left,right}
#	bspc desktop -f {prev,next}.local
#
## focus the last node/desktop
#super + {grave,Tab}
#	bspc {node,desktop} -f last
#
## focus the older or newer node in the focus history
#super + {o,i}
#	bspc wm -h off; \
#	bspc node {older,newer} -f; \
#	bspc wm -h on
#
## focus or send to the given desktop
#super + {_,shift + }{1-9,0}
#	bspc {desktop -f,node -d} '^{1-9,10}'
#
##
## preselect
##
#
## preselect the direction
#super + ctrl + {h,j,k,l}
#	bspc node -p {west,south,north,east}
#
## preselect the ratio
#super + ctrl + {1-9}
#	bspc node -o 0.{1-9}
#
## cancel the preselection for the focused node
#super + ctrl + space
#	bspc node -p cancel
#
## cancel the preselection for the focused desktop
#super + ctrl + shift + space
#	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel
#
##
## move/resize
##
#
## expand a window by moving one of its side outward
#super + alt + {h,j,k,l}
#	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
#
## contract a window by moving one of its side inward
#super + alt + shift + {h,j,k,l}
#	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
#
## move a floating window
#super + {Left,Down,Up,Right}
#	bspc node -v {-20 0,0 20,0 -20,20 0}
