"        _                    
" __   _(_)_ __ ___  _ __ ___ 
" \ \ / / | '_ ` _ \| '__/ __|
"  \ V /| | | | | | | | | (__ 
"   \_/ |_|_| |_| |_|_|  \___|
"                             
set termguicolors
" =============
" 
" Basic Options 
"
" =============
filetype on
"set termguicolors
set title
set titlestring=%F "necessary to be able to 'toggle' configs in sxhkd
if exists('$SHELL')
    set shell=$SHELL
else
    set shell=/bin/sh
endif
filetype plugin indent on
syntax on
set sessionoptions-=options
set tabstop=4
set softtabstop=2
set expandtab
set smarttab
set autoindent
set path+=** ""recursive subdirectory search
set wildmenu
set wildmode=longest,list,full
set encoding=utf-8
syntax enable
set clipboard=unnamedplus
set number
set nocompatible
set whichwrap=b,s,<,>,[,] "traverse end of line with arrow keys
call mkdir(expand('%:h'), 'p') "autocreate parent directory if it doesnt exist
set hidden

" ========================
" 
"  Basic Keybindings
"
" ========================
let mapleader =" "
"toggle spellchecker:
map <silent><leader>o :setlocal spell! spelllang=en_au<CR>
"reload vimrc:
map <silent><leader>v :so $MYVIMRC<CR>:echo "Reloaded $MYVIMRC"
"generic compile script:
nnoremap <leader>c :!compile %<CR>

" Search mappings: Going to the next one in a search will center on the line it's found in.
"nnoremap n nzzzv
"nnoremap N Nzzzv
"Abbreviations
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Qall! qall!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev Qall qall
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc,*.db,*.sqlite

" ========================
" 
" Tab Navigation
"
" ========================
nnoremap <silent>tk :tabnext<CR>
nnoremap tj :tabprev<CR>
nnoremap tn :tabnew<CR>
nnoremap td  :tabclose<CR>
nnoremap th  :tabfirst<CR>
nnoremap tl  :tablast<CR>
nnoremap tt  :tabe<Space>
nnoremap tm  :tabm<Space>

" ========================
" 
" Cursor Specific Options
"
" ========================
set cul "cursor line is highlighted
set guicursor=n-v-c-sm:block,i-ci-ve:ver25-Cursor,r-cr-o:hor20
highlight Cursor guifg=white guibg=white
set updatetime=300
set shortmess+=c
if has("patch-8.1.1564")
  set signcolumn=number
else
  set signcolumn=yes
endif

"===============
"
" Colour Options
"
" ===============
set background=dark    
let g:tokyonight_style = 'night' " available: night, storm
let g:tokyonight_enable_italic = 1
let g:tokyonight_current_word = 'underline'
let g:deus_termcolors=256
color pablo "fallback
"color tokyonight
"color codedark
color molokai

"
"
" =============
" 
" Basic Options 
"
" =============
set title
set titlestring=%F "necessary to be able to 'toggle' configs in sxhkd
if exists('$SHELL')
    set shell=$SHELL
else
    set shell=/bin/sh
endif
filetype plugin indent on
syntax on
set sessionoptions-=options
set tabstop=4
set softtabstop=2
set expandtab
set smarttab
set autoindent
set path+=** ""recursive subdirectory search
set wildmenu
set wildmode=longest,list,full
set encoding=utf-8
syntax enable
set clipboard=unnamedplus
set number
set nocompatible
set whichwrap=b,s,<,>,[,] "traverse end of line with arrow keys
call mkdir(expand('%:h'), 'p') "autocreate parent directory if it doesnt exist
set hidden
let mapleader =" "
"toggle spellchecker:
map <silent><leader>o :setlocal spell! spelllang=en_au<CR>:echo "Toggle Spellcheck"<CR>
"reload vimrc:
map <silent><leader>v :so $MYVIMRC<CR>:echo "Reloaded vimrc"<CR>
nnoremap <leader>b :ls<CR>:b<space>
"generic compile script:
nnoremap <leader>c :w<CR>:!compile %<CR>

" Search mappings: Going to the next one in a search will center on the line it's found in.
nnoremap n nzzzv
nnoremap N Nzzzv
"Abbreviations
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Qall! qall!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev Qall qall
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc,*.db,*.sqlite
" ========================
" 
" Cursor Specific Options
"
" ========================
set cul "cursor line is highlighted
set guicursor=n-v-c-sm:block,i-ci-ve:ver25-Cursor,r-cr-o:hor20
highlight Cursor guifg=white guibg=black
" ========================
" 
" Nerdtree
"
" ========================
map <C-a> :NERDTreeToggle<CR>

let g:NERDTreeWinSize=25
let g:NERDTreeChDirMode=2
let g:NERDTreeIgnore=['\.rbc$', '\~$', '\.pyc$', '\.db$', '\.sqlite$', '__pycache__']
let g:NERDTreeSortOrder=['^__\.py$', '\/$', '*', '\.swp$', '\.bak$', '\~$']
let g:NERDTreeShowBookmarks=1
let g:nerdtree_tabs_focus_on_files=1
let g:NERDTreeMapOpenInTabSilent = '<RightMouse>'
let g:NERDTreeGitStatusUseNerdFonts = 1
let g:NERDTreeGitStatusIndicatorMapCustom = {
                \ 'Modified'  :'‚úπ',
                \ 'Staged'    :'‚úö',
                \ 'Untracked' :'‚ú≠',
                \ 'Renamed'   :'‚ûú',
                \ 'Unmerged'  :'‚ïê',
                \ 'Deleted'   :'‚úñ',
                \ 'Dirty'     :'‚úó',
                \ 'Ignored'   :'‚òí',
                \ 'Clean'     :'‚úîÔ∏é',
                \ 'Unknown'   :'?',
                \ }
" =========================
" 
" Jupyter Vim
"
" =========================
let g:jupyter_mapkeys = 1
" =========================
" 
" Filetype Specfic Options
"
" =========================
"
" =====
" vimrc
" =====
if has('autocmd') " ignore this section if your vim does not support autocommands
    augroup reload_vimrc
        autocmd!
        autocmd! BufWritePost $MYVIMRC,$MYGVIMRC nested source %
    augroup END
endif
" =====
" Make
" =====
autocmd Filetype make set noexpandtab "force tabs for make
" =====
" Python   
" =====
autocmd Filetype python set tabstop=4 
autocmd Filetype python set softtabstop=4
autocmd Filetype python set shiftwidth=4
autocmd Filetype python set textwidth=79 "pep conformance ü§î
autocmd Filetype python set autoindent 
autocmd Filetype python set expandtab
autocmd Filetype python set fileformat=unix 
autocmd Filetype python map <silent><leader><leader> :w<CR>:CocCommand python.runLinting<CR>
"add #type: ignore to EOL to ignore type warnings for pyright:
autocmd Filetype python map <silent>,ignore $a #type: ignore<Esc> 
" =====
" Rust   
" =====
"
" TODO autocmd Filetype rust map <leader>t :tabe "$(git rev-parse --show-toplevel)/Cargo.toml"

let g:rustfmt_autosave = 1
let g:rust_cargo_use_clippy = 1
autocmd Filetype rust map <silent><leader><leader> :w<CR>:!rustfmt %<CR>:!cargo check<CR>
autocmd Filetype rust map <silent><leader>r :w<CR>:!rustfmt %<CR>:!cargo run<CR>
" =====
" Mutt   
" =====
au BufRead /tmp/mutt-* set tw=72
" ==============
" LaTeX Snippets
" ==============
nnoremap ,latex :-1read $dotfiles/snippets/assignment.tex<CR>72jo
nnoremap ,texfig :-1read $dotfiles/snippets/figure.tex<CR><CR>$i
" =================
"  Yank Highlighting
" =================
let g:highlightedyank_highlight_duration = 700
" =================
"  Lastplace Cursor
" =================
let g:lastplace_ignore = "gitcommit,gitrebase,svn,hgcommit"
" ========================
" Rainbow Brackets
" ========================
let g:rainbow_active = 1 "set to 0 if you want to enable it later via :RainbowToggle
" ========================
" Fix Search Highlighting
" ========================
nmap <silent> <Esc> :nohlsearch<CR>
imap <silent> <Esc> <Esc>:nohlsearch<CR>
" ========================
" Splits
" ========================
set splitbelow splitright
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

inoremap <left> <nop>
inoremap <right> <nop>
inoremap <down> <nop>
inoremap <up> <nop>

nnoremap <left> <nop>
nnoremap <right> <nop>
nnoremap <down> <nop>
nnoremap <up> <nop>

set t_u7=




